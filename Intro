# **Introduction to DBMS and SQL Queries** 💾❤️

Hey Arya,  
Let’s begin our dive into the world of **Databases** – the backbone of every great application!  
This is not just technical – this is our love letter to logic, order, and intelligent storage.

---

## **What is a DBMS?** 🗃️

A **Database Management System (DBMS)** is software that manages data.  
Think of it like a library – it stores, organizes, and retrieves data efficiently!

**Examples:**  
- MySQL  
- PostgreSQL  
- Oracle  
- MongoDB (NoSQL)

---

## **Why Do We Use a DBMS?** 🤔

- **Efficiency:** Fetch only what you need  
- **Security:** Handle access control  
- **Backup & Recovery:** Data loss protection  
- **Concurrency:** Multiple users, one truth  
- **Integrity:** Keeps data consistent

---

## **Types of DBMS** 📚

1. **Relational DBMS (RDBMS)** – Tables, Rows, Columns  
   - MySQL, PostgreSQL  
2. **NoSQL DBMS** – Non-tabular  
   - MongoDB, Cassandra  
3. **Hierarchical DBMS** – Tree-like structure  
   - IBM IMS  
4. **Network DBMS** – Graph-based  
   - IDMS

---

## **What is SQL?** 🧠

**Structured Query Language** – language to interact with RDBMS.

- **Create** tables  
- **Insert** data  
- **Update** values  
- **Delete** records  
- **Query** for answers

---

## **Basic SQL Commands** 📜

- `CREATE TABLE` – Create a structure  
- `INSERT INTO` – Add new data  
- `SELECT` – Retrieve data  
- `UPDATE` – Modify existing data  
- `DELETE` – Remove data  
- `WHERE` – Filter rows  
- `ORDER BY` – Sort results  
- `GROUP BY` – Group data  
- `JOIN` – Combine tables

---

## **Why Learn SQL?** 🚀

- **Interviews:** Almost every tech job asks SQL  
- **Real-world:** Power your backend logic  
- **Analytics:** Business relies on data  
- **Universal:** Same across languages

---

## 💾 SQL Query Basics — For My 🦋

### 1. What is a SQL Query?
A **SQL query** is a command used to interact with a database — to retrieve, insert, update, or delete data from tables.

Think of a database as a smart Excel sheet, and SQL as the language we use to talk to it.

---

### 2. SELECT Statement ✨

```sql
SELECT column1, column2 FROM table_name;
```

- `SELECT` is used to *fetch data*.
- You can fetch specific columns or use `*` to get all.

Example:
```sql
SELECT name, age FROM students;
```

---

### 3. WHERE Clause 🔍

```sql
SELECT * FROM students WHERE age > 18;
```

- Filters rows based on a condition.

---

### 4. INSERT INTO Statement 🌱

```sql
INSERT INTO students (name, age) VALUES ('Arya', 21);
```

- Adds a new record.

---

### 5. UPDATE Statement 🔄

```sql
UPDATE students SET age = 22 WHERE name = 'Arya';
```

- Updates existing data.

---

### 6. DELETE Statement ❌

```sql
DELETE FROM students WHERE name = 'Arya';
```

- Removes data.

---

### 7. ORDER BY Clause 📊

```sql
SELECT * FROM students ORDER BY age DESC;
```

- Sorts results (ascending/descending).

---

### 8. LIMIT Clause 🎯

```sql
SELECT * FROM students LIMIT 5;
```

- Limits number of returned rows.

---

### 9. BETWEEN Clause 🔢

```sql
SELECT * FROM students WHERE age BETWEEN 18 AND 25;
```

- Filters range of values.

---

### 10. IN Clause ✅

```sql
SELECT * FROM students WHERE name IN ('Arya', 'Pooja', 'Nitin');
```

- Filters from a given list.

---

> 💡 **Pro Tip**: SQL is not case-sensitive — but writing cleanly shows you care!

This is the warm-up! We'll explore **joins**, **aggregates**, and **subqueries** next.

#SQLForLove #TeachToImpress #SheKnows🦋

Let's rock DBMS together – one query at a time!

**Nitin**